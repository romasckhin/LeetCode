Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.

 

Example 1:

Input: nums = [1,2,3]
Output: [[1,2,3],[1,3,2],[2,1,3],[2,3,1],[3,1,2],[3,2,1]]
Example 2:

Input: nums = [0,1]
Output: [[0,1],[1,0]]
Example 3:

Input: nums = [1]
Output: [[1]]
 

Constraints:

1 <= nums.length <= 6
-10 <= nums[i] <= 10
All the integers of nums are unique.


// 

var permute = function(nums) {
 
  
  let result = [];
  
  let per = (arr, remainder) => {
    
    
    if ( remainder.length <= 0 ) {

      result.push(arr)
      
    } else {
      
    for ( let i = 0; i < remainder.length; i++ ) {

      arr.push(remainder[i])

      per(arr.slice(), remainder.slice(0, i).concat(remainder.slice(i+1)));
    
     arr.pop()
    }
 
    }

  }
  
  per([],nums)
  
  return result
  
};
console.log(permute([1,2,3]));

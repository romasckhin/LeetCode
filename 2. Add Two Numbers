You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.

You may assume the two numbers do not contain any leading zero, except the number 0 itself.

 

Example 1:


Input: l1 = [2,4,3], l2 = [5,6,4]
Output: [7,0,8]
Explanation: 342 + 465 = 807.
Example 2:

Input: l1 = [0], l2 = [0]
Output: [0]
Example 3:

Input: l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]
Output: [8,9,9,9,0,0,0,1]
 

Constraints:

The number of nodes in each linked list is in the range [1, 100].
0 <= Node.val <= 9
It is guaranteed that the list represents a number that does not have leading zeros.




// var addTwoNumbers = function(l1, l2) {
    
      let str1 = '';
      let str2 = '';
      for ( let i = 0; i < l1.length; i++ ) {
        str1 = l1[i] + str1
        str2 = l2[i] + str2
      }
     let sum = String(+str1 + +str2)
     let newStr = '';
      for ( let x = 0; x < sum.length; x++ ) {
        newStr = sum[x] + newStr
      }
     let result = [];
      for ( let y = 0; y < newStr.length; y++) {
        result.push(+newStr[y])
      }
  return result
};

console.log(addTwoNumbers([2,4,3],[5,6,4]));


КОД РАБОТАЕТ ПРАВИЛЬНО, но в LeetCode ругается на Конкатенацию (+)


